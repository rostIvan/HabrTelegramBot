version: 2
jobs:
  build:
    docker:
      - image: circleci/openjdk:8-jdk-browsers
      - image: circleci/mysql:5.7
        environment:
          - MYSQL_ROOT_PASSWORD=root
    working_directory: ~/TelegramBot

    environment:
      # Customize the JVM maximum heap limit
      JVM_OPTS: -Xmx3200m
      TERM: dumb
      CC_TEST_REPORTER_ID: d2be86e30e85eac5caccbc2c989f05fb6e88ffb862554593d86b8ee18f8803b1

    steps:
      - checkout
      - run: chmod +x gradlew

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "build.gradle" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run: ./gradlew dependencies

      - save_cache:
          paths:
            - ~/.gradle
          key: v1-dependencies-{{ checksum "build.gradle" }}

      # code climate download
      - run:
          name: Code climate test reporter tools download
          command: |
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
            chmod +x ./cc-test-reporter

      # run tests and jacoco coverage report
      - run:
          name: Gradle build
          command: ./gradlew clean build --info jacocoTestReport

      # run pitest report
      - run: ./gradlew pitest

      # copy artifacts to dir
      - run:
          name: Copy artifacts
          command: |
            mkdir /tmp/artifacts
            mkdir /tmp/artifacts/jar
            mkdir /tmp/artifacts/test-reports
            cp -r build/libs/* /tmp/artifacts/jar
            cp -r build/reports/* /tmp/artifacts/test-reports

      # store artifacts
      - store_artifacts:
          path: /tmp/artifacts

      - store_test_results:
          path: build/test-results/test

      # set up xml path for code climate
      - run:
          name: Set jacoco.xml path for code climate
          command: JACOCO_SOURCE_PATH=src/main/kotlin ./cc-test-reporter format-coverage ./build/reports/jacoco/test/jacocoTestReport.xml --input-type jacoco

      # upload coverage on code climate
      - run:
          name: Upload code climate report
          command: ./cc-test-reporter upload-coverage -r $CC_TEST_REPORTER_ID
          when: on_success

      # upload coverage on codecov
      - run:
          name: Upload codecov
          command: bash <(curl -s https://codecov.io/bash)
          when: on_success



